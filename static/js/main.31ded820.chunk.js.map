{"version":3,"sources":["Components/Errors/404.js","Components/Layout/breadcrumb.js","Components/Layout/index.js","Components/Layout/Master/basicMaterialUI.js","Components/Layout/Master/MaterialTableFactory.js","Components/Layout/Report/Chart.js","Components/Layout/Report/ContaminationGraph.js","Components/Layout/Report/LineChart.js","Components/Layout/Report/LineChart2.js","Components/Layout/home.js","Components/Layout/Chart/RTchart.js","Components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","typo","color","SimpleBreadcrumbs","classes","pathnames","location","pathname","split","filter","x","Breadcrumbs","aria-label","className","map","value","index","last","length","to","slice","join","Typography","key","Layout","state","mobileOpen","listA","listB","this","props","children","writers","handleDrawerToggle","setState","drawer","Hidden","smDown","toolbar","test","List","aria-labelledby","Divider","ListItem","button","component","Link","selected","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","disablePadding","nested","root","CssBaseline","AppBar","position","appBar","Toolbar","align","variant","noWrap","smUp","implementation","Drawer","open","onClose","paper","drawerPaper","ModalProps","keepMounted","content","Component","compose","withRouter","withStyles","display","breakpoints","up","width","flexShrink","zIndex","background","menuButton","marginRight","spacing","mixins","flexGrow","padding","paddingTop","marginLeft","paddingLeft","title","appIcon","grow","marginTop","overflowX","table","minWidth","hover","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","default","TableRow","createData","name","remark","inactive","operator","lastmdfdate","MaterialTableDemo","React","useState","columns","field","type","data","Factory","Detail","Year","Remark","Operator","lmd","Grow","icons","Edit","EditIcon","Check","DetailPanel","ChevronRight","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","Search","ViewColumn","Delete","DeleteIcon","Clear","ClearIcon","Add","SortArrow","ArrowUpward","ResetSearch","ThirdStateCheck","Remove","editable","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","Contamination","chartData","labels","datasets","label","Chart","height","options","maintainAspectRatio","margin","LineChart1","chartReference","dt","val1","fill","borderColor","val3","val4","val6","val7","val8","val9","val10","va11","val12","val13","lc","chartInstance","config","val11","update","console","log","ref","reference","val2","val5","card","bullet","transform","pos","marginBottom","grid","grid2","cardCategory","justifyContent","cardTitle","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","Card_PT3703A","Card_PT3703B","Card_PT3801","Card_PT3802","Card_PT4706","Card_TE2601","Card_TE4702","Card_TE4706b","Card_TE7120","Card_TE8901A","Card_TCV8902","Card_PCV9601","Card_LCV9901","SimpleCard","reportdata","test1","Grid","container","justify","item","xs","sm","md","Card","CardContent","pt3703a","pt3703b","pt3801","pt3802","pt4706","te2601","te4702","te4706b","te7120","te8901a","tcv8902","pcv9601","lcv9901","LineChart","LineChart2","RTChart","chartData2","lc2","chartReference2","maxValue","Onedata","needleColor","segments","segmentColors","ringWidth","needleHeightRatio","customSegmentStops","space","chartdata","chartdata2","getData","axios","get","then","res","catch","err","myArray","resdata","i","intervalID","bind","clearTimeout","exact","path","render","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2RAEe,oBACf,0C,wLCIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJC,MAAM,wBAKG,SAASC,IACpB,IAAMC,EAAUN,IAChB,OACE,kBAAC,IAAD,MACG,YAAmB,IACZO,EADW,EAAfC,SACyBC,SAASC,MAAM,KAAKC,QAAO,SAAAC,GAAC,OAAIA,KAC3D,OACE,kBAACC,EAAA,EAAD,CAAaC,aAAW,aAAaC,UAAWT,EAAQH,MACrDI,EAAUS,KAAI,SAACC,EAAOC,GACrB,IAAMC,EAAOD,IAAUX,EAAUa,OAAS,EACpCC,EAAE,WAAOd,EAAUe,MAAM,EAAGJ,EAAQ,GAAGK,KAAK,MAElD,OAAOJ,EACL,kBAACK,EAAA,EAAD,CAAaC,IAAKJ,GACfJ,GAGH,kBAAC,IAAD,CAAYF,UAAWT,EAAQH,KAAMkB,GAAIA,EAAII,IAAKJ,GAC/CJ,UCrBrB,IAkEMS,E,2MACFC,MAAQ,CACJC,YAAW,EACXC,OAAM,EACNC,OAAM,G,wEAKD,IAAD,SACsDC,KAAKC,MAAvD1B,EADJ,EACIA,QAAmBG,EADvB,EACaD,SAAUC,SAAUwB,EADjC,EACiCA,SAC7BL,GAFJ,EAC0CM,QACzBH,KAAKJ,MAAlBC,YAFJ,EAGiBG,KAAKJ,MAAlBE,EAHJ,EAGIA,MAAMC,EAHV,EAGUA,MAKRK,EAAqB,WACvB,EAAKC,SAAS,CAACR,YAAa,EAAKD,MAAMC,cAWrCS,EACF,6BACE,kBAACC,EAAA,EAAD,CAAQC,QAAM,GACd,yBAAKxB,UAAWT,EAAQkC,WAExB,yBAAKzB,UAAWT,EAAQmC,OACxB,kBAACC,EAAA,EAAD,CACEC,kBAAgB,wBAChB5B,UAAU,QAEV,kBAAC6B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAM3B,GAAI,WAAW4B,SAAU,aAAexC,GACtE,kBAACyC,EAAA,EAAD,CAAcC,QAAS,uCAE3B,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACM,QAvBL,WAClB,EAAKhB,SAAS,CAACP,OAAQ,EAAKF,MAAME,UAuB1B,kBAACqB,EAAA,EAAD,CAAcC,QAAS,wCACtBtB,EAAQ,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAE5B,kBAACwB,EAAA,EAAD,CAAUC,GAAIzB,EAAO0B,QAAQ,OAAOC,eAAa,GAC/C,kBAACd,EAAA,EAAD,CAAMK,UAAU,MAAMU,gBAAc,GAClC,kBAACZ,EAAA,EAAD,CAAUC,QAAM,EAAC/B,UAAWT,EAAQoD,OAAQX,UAAWC,IAAM3B,GAAI,mBAC/D,kBAAC6B,EAAA,EAAD,CAAcC,QAAQ,aAExB,kBAACN,EAAA,EAAD,CAAUC,QAAM,EAAC/B,UAAWT,EAAQoD,OAAQX,UAAWC,IAAM3B,GAAI,mBAC/D,kBAAC6B,EAAA,EAAD,CAAcC,QAAQ,eAI5B,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAM3B,GAAI,gBAAgB4B,SAAU,kBAAoBxC,GAChF,kBAACyC,EAAA,EAAD,CAAcC,QAAS,oDAE3B,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAM3B,GAAK,WACrC,kBAAC6B,EAAA,EAAD,CAAcC,QAAS,wCAEzB,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,CAAcC,QAAS,qCAEzB,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,CAAcC,QAAS,0DAEzB,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,CAAcC,QAAS,gDAEzB,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACb,kBAACI,EAAA,EAAD,CAAcC,QAAS,6CAE1B,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,CAAcC,QAAS,wDAEzB,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACI,EAAA,EAAD,CAAcC,QAAS,wCAEzB,kBAACP,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACM,QAlEJ,WACnB,EAAKhB,SAAS,CAACN,OAAQ,EAAKH,MAAMG,UAkE1B,kBAACoB,EAAA,EAAD,CAAcC,QAAS,wCACtBrB,EAAO,kBAAC,IAAD,MAAiB,kBAAC,IAAD,OAE3B,kBAACuB,EAAA,EAAD,CAAUC,GAAIxB,EAAOyB,QAAQ,OAAOC,eAAa,GAC/C,kBAACd,EAAA,EAAD,CAAMK,UAAU,MAAMU,gBAAc,GAClC,kBAACZ,EAAA,EAAD,CAAUC,QAAM,EAAC/B,UAAWT,EAAQoD,OAAQX,UAAWC,IAAM3B,GAAI,iBAC/D,kBAAC6B,EAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACN,EAAA,EAAD,CAAUC,QAAM,EAAC/B,UAAWT,EAAQoD,OAAQX,UAAWC,IAAM3B,GAAI,kBAC/D,kBAAC6B,EAAA,EAAD,CAAcC,QAAQ,kBAExB,kBAACN,EAAA,EAAD,CAAUC,QAAM,EAAC/B,UAAWT,EAAQoD,OAAQX,UAAWC,IAAM3B,GAAI,kBAC/D,kBAAC6B,EAAA,EAAD,CAAcC,QAAQ,oBAI5B,kBAACP,EAAA,EAAD,QAIR,OAAO,kBAAC,WAAD,KACP,yBAAK7B,UAAWT,EAAQqD,MACxB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQ/C,UAAWT,EAAQyD,OAAQX,QAASjB,GAC3D,kBAAC6B,EAAA,EAAD,KACE,yBAAKjD,UAAWT,EAAQH,KAAM8D,MAAM,QACpC,kBAAC5D,EAAD,OAEA,kBAACmB,EAAA,EAAD,CAAaT,UAAWT,EAAQH,KAAM8D,MAAM,QAAQC,QAAQ,KAAKC,QAAM,GAAvE,mCAKJ,yBAAKpD,UAAWT,EAAQ+B,OAAQvB,aAAW,mBAEzC,kBAACwB,EAAA,EAAD,CAAQ8B,MAAI,EAACC,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACEJ,QAAQ,YACRK,KAAM3C,EACN4C,QAASrC,EACT7B,QAAS,CACPmE,MAAOnE,EAAQoE,aAEjBC,WAAY,CACVC,aAAa,IAGdvC,KAKP,0BAAMtB,UAAWT,EAAQuE,SACpB5C,S,GAjJQ6C,aAwJNC,MACXC,IACAC,aA1NW,SAAA/E,GAAK,MAAK,CACvByD,KAAM,CACJuB,QAAS,QAGX7C,OAAO,eACJnC,EAAMiF,YAAYC,GAAG,MAAQ,CAC5BC,MATc,IAUdC,WAAY,IAIhBvB,OAAQ,CACNwB,OAAQrF,EAAMqF,OAAOlD,OAAS,EAE9BmD,WAAY,oDAGdC,WAAY,CACVC,YAAaxF,EAAMyF,QAAQ,IAE7BnD,QAAStC,EAAM0F,OAAOpD,QACtBkC,YAAa,CACXW,MAzBgB,KA6BlBR,QAAQ,aACNgB,SAAU,EACVC,QAAS5F,EAAMyF,QAAQ,GACvBI,WAAa7F,EAAMyF,QAAQ,KAC1BzF,EAAMiF,YAAYC,GAAG,MAAQ,CAC5BY,YAlCc,MAsClBtC,OAAQ,CACNuC,YAAa/F,EAAMyF,QAAQ,IAE7BO,MAAM,aACJhB,QAAS,QACRhF,EAAMiF,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbiB,QAAQ,CACN/F,MAAM,oBAERgG,KAAM,CACJP,SAAU,GAEZpD,KAAK,CACHsD,WAAY7F,EAAMyF,QAAQ,IAE5BxF,KAAK,aACH0F,SAAU,GACT3F,EAAMiF,YAAYC,GAAG,MAAQ,QAgKnBL,CAGbrD,G,qGCzNgBzB,aAAW,SAAAC,GAAK,MAAK,CACrCyD,KAAM,CACJ0B,MAAO,OACPgB,UAAWnG,EAAMyF,QAAQ,GACzBW,UAAW,QAEbC,MAAO,CACLC,SAAU,IACVC,MAAO,sBAIaxB,aAAW,SAAA/E,GAAK,MAAK,CAC3CwG,KAAM,CACJC,gBAAiBzG,EAAM0G,QAAQC,OAAOC,MACtC1G,MAAOF,EAAM0G,QAAQC,OAAOE,OAE9BC,KAAM,CACJC,SAAU,OANUhC,CAQpBiC,KAEmBjC,aAAW,SAAA/E,GAAK,MAAK,CAC1CyD,KAAM,CACJ,qBAAsB,CACpBgD,gBAAiBzG,EAAM0G,QAAQpB,WAAW2B,aAHzBlC,CAOnBmC,KAEJ,SAASC,EAAWC,EAAMC,EAAQC,EAAUC,EAAUC,GACpD,MAAO,CAAEJ,OAAMC,SAAQC,WAAUC,WAAUC,eAI3CL,EAAW,WAAY,WAAW,EAAO,OAAQ,yBACjDA,EAAW,YAAY,WAAW,EAAM,OAAQ,yBAChDA,EAAW,QAAQ,WAAW,EAAO,OAAQ,yBAC7CA,EAAW,WAAY,WAAW,EAAO,OAAQ,yBACjDA,EAAW,QAAQ,WAAW,EAAO,OAAQ,yB,u4BCnChC,SAASM,KAAqB,IAAD,EAChBC,IAAMC,SAAS,CACvCC,QAAS,CACP,CAAE5B,MAAO,UAAW6B,MAAO,WAC3B,CAAE7B,MAAO,SAAU6B,MAAO,UAC1B,CAAE7B,MAAO,OAAQ6B,MAAO,OAAQC,KAAM,WACtC,CAAE9B,MAAO,UAAW6B,MAAO,UAC3B,CAAE7B,MAAO,WAAY6B,MAAO,YAC5B,CAAE7B,MAAO,sBAAwB6B,MAAO,QAE1CE,KAAM,CACJ,CAAEC,QAAS,KAAMC,OAAQ,SAAUC,KAAM,KAAMC,OAAQ,MAAOC,SAAS,OAAOC,IAAI,yBAClF,CAAEL,QAAS,MAAOC,OAAQ,UAAWC,KAAM,KAAMC,OAAQ,MAAOC,SAAS,OAAOC,IAAI,wBACpF,CAAEL,QAAS,MAAOC,OAAQ,UAAWC,KAAM,KAAMC,OAAQ,MAAOC,SAAS,OAAOC,IAAI,wBACpF,CAAEL,QAAS,MAAOC,OAAQ,UAAWC,KAAM,KAAMC,OAAQ,MAAOC,SAAS,OAAOC,IAAI,4BAd9C,mBACnC5G,EADmC,KAC5BS,EAD4B,KAkB1C,OACE,kBAACoG,EAAA,EAAD,CAAMlF,IAAI,GACV,kBAAC,IAAD,CACImF,MAAO,CACHC,KAAKC,IACLC,MAAOA,KACPC,YAAaC,KACbC,OAAQC,KACRC,OAAQC,KACRC,UAAWA,KACXC,SAAUA,KACVC,SAAUP,KACVQ,aAAcC,KACdC,OAAQA,KACRC,WAAWA,KACXC,OAAOC,KACPC,MAAQC,KACRC,IAAKA,KACLC,UAAUC,KACVC,YAAYJ,KACZK,gBAAgBC,MAEtBjE,MAAM,UACN4B,QAASnG,EAAMmG,QACfG,KAAMtG,EAAMsG,KACZmC,SAAU,CACRC,SAAU,SAAAC,GAAO,OACf,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMvC,EAAI,YAAOtG,EAAMsG,MACvBA,EAAKyC,KAAKJ,GACVlI,EAAS,MAAKT,EAAN,CAAasG,YACpB,SAEP0C,YAAa,SAACL,EAASM,GAAV,OACX,IAAIL,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMvC,EAAI,YAAOtG,EAAMsG,MACvBA,EAAKA,EAAK4C,QAAQD,IAAYN,EAC9BlI,EAAS,MAAKT,EAAN,CAAasG,YACpB,SAEP6C,YAAa,SAAAF,GAAO,OAClB,IAAIL,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMvC,EAAI,YAAOtG,EAAMsG,MACvBA,EAAK8C,OAAO9C,EAAK4C,QAAQD,GAAU,GACnCxI,EAAS,MAAKT,EAAN,CAAasG,YACpB,a,aC/ET+C,G,YAEF,WAAYhJ,GAAO,IAAD,8BACd,4CAAMA,KACDL,MAAQ,CACTsJ,UAAU,CACNC,OAAQ,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAW,WAAY,YAC5IC,SAAS,CACP,CACEC,MAAM,iBACNnD,KAAK,CACH,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFtB,gBAAgB,CACd,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,4BAGJ,CACEyE,MAAM,qBACNnD,KAAK,CACH,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFtB,gBAAgB,CACZ,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,6BA/DF,E,sEA2ET,IACGrG,EAAYyB,KAAKC,MAAjB1B,QACR,OACI,yBAAKS,UAAaT,EAAQ+K,OACtB,kBAAC,KAAD,CACApD,KAAQlG,KAAKJ,MAAMsJ,UACnB5F,MAAS,IACTiG,OAAS,GACTC,QAAW,CAACC,qBAAqB,U,GArFrB1G,aA6FZG,gBAnGD,SAAA/E,GAAK,MAAK,CACvBmL,MAAM,CACJnG,QAAS,OACTuG,QAAQ,OAgGIxG,CAAmB+F,IC7F7BK,G,YAEF,WAAYrJ,GAAO,IAAD,8BACd,4CAAMA,KACDL,MAAQ,CACTsJ,UAAU,CACNC,OAAQ,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAQ,QAAS,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAC3MC,SAAS,CACP,CACEC,MAAM,6CACNnD,KAAK,CACH,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEFtB,gBAAgB,CACd,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,+BAvDA,E,sEA4GT,IACCrG,EAAYyB,KAAKC,MAAjB1B,QACN,OACI,yBAAKS,UAAaT,EAAQ+K,OACtB,kBAAC,KAAD,CACApD,KAAQlG,KAAKJ,MAAMsJ,UACnB5F,MAAS,IACTiG,OAAS,GACTC,QAAW,CAACC,qBAAqB,U,GAtH7B1G,aA8HJG,gBApID,SAAA/E,GAAK,MAAK,CACvBmL,MAAM,CACJnG,QAAS,OACTuG,QAAQ,OAiIIxG,CAAmBoG,IC7H7BK,I,kBAGF,WAAY1J,GAAO,IAAD,8BACd,4CAAMA,KAHZ2J,eAAiB,GAIX,EAAKhK,MAAQ,CACTsJ,UAAW,CACTC,OAAO,EAAKlJ,MAAMS,KAAKmJ,GACvBT,SAAS,CACP,CACEC,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAKoJ,KACrBC,MAAK,EACLC,YAAc,yBACdpF,gBAAkB,0BAEpB,CACEyE,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAKuJ,KACrBF,MAAK,EACLC,YAAc,uBACdpF,gBAAkB,wBAEpB,CACEyE,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAKwJ,KACrBH,MAAK,EACLC,YAAc,uBACdpF,gBAAkB,wBAEpB,CACEyE,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAKyJ,KACrBJ,MAAK,EACLC,YAAc,yBACdpF,gBAAkB,0BAEpB,CACEyE,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAK0J,KACrBL,MAAK,EACLC,YAAc,uBACdpF,gBAAkB,wBAEpB,CACEyE,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAK2J,KACrBN,MAAK,EACLC,YAAc,qBACdpF,gBAAkB,4BAEpB,CACEyE,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAK4J,KACrBP,MAAK,EACLC,YAAc,2BACdpF,gBAAkB,4BAEpB,CACEyE,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAK6J,MACrBR,MAAK,EACLC,YAAc,2BACdpF,gBAAkB,4BAEpB,CACEyE,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAK8J,KACrBT,MAAK,EACLC,YAAc,2BACdpF,gBAAkB,4BAEpB,CACEyE,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAK+J,MACrBV,MAAK,EACLC,YAAc,2BACdpF,gBAAkB,4BAEpB,CACEyE,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAKgK,MACrBX,MAAK,EACLC,YAAc,2BACdpF,gBAAkB,+BAjFd,E,kFA0FhB,IAAI+F,EAAK3K,KAAK4J,eAAegB,cAC7BD,EAAGE,OAAO3E,KAAKiD,OAASnJ,KAAKC,MAAMS,KAAKmJ,GACxCc,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAKoJ,KAClDa,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAKuJ,KAClDU,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAKwJ,KAClDS,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAKyJ,KAClDQ,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK0J,KAClDO,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK2J,KAClDM,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK4J,KAClDK,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK6J,MAClDI,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAKoK,MAClDH,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK+J,MAClDE,EAAGE,OAAO3E,KAAKkD,SAAS,IAAIlD,KAAOlG,KAAKC,MAAMS,KAAKgK,MACnDC,EAAGI,W,+BAII,IAAD,OACExM,EAAYyB,KAAKC,MAAjB1B,QAEN,OADFyM,QAAQC,IAAIjL,KAAKC,MAAMS,KAAKmJ,IAEtB,yBAAK7K,UAAWT,EAAQ+K,OACpB,kBAAC,KAAD,CACApD,KAAQlG,KAAKJ,MAAMsJ,UACnB5F,MAAS,IACTiG,OAAS,IACTC,QACI,CAACC,qBAAqB,GAE1ByB,IAAO,SAACC,GAAD,OAAe,EAAKvB,eAAiBuB,U,GA1HnCpI,cAiITG,gBAvID,SAAA/E,GAAK,MAAK,CACvBmL,MAAM,CACJnG,QAAS,WAqIGD,CAAmByG,I,8BCjI7BA,G,YAGF,WAAY1J,GAAO,IAAD,8BACd,4CAAMA,KAHZ2J,eAAiB,GAIX,EAAKhK,MAAQ,CACTsJ,UAAW,CACTC,OAAO,EAAKlJ,MAAMS,KAAKmJ,GACvBT,SAAS,CACP,CACEC,MAAM,UACNnD,KAAK,EAAKjG,MAAMS,KAAK0K,KACrBrB,MAAK,EACLC,YAAc,wBACdpF,gBAAmB,yBAErB,CACEyE,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAK2K,KACrBtB,MAAK,EACLC,YAAc,yBACdpF,gBAAkB,6BAlBd,E,kFA2BhB,IAAI+F,EAAK3K,KAAK4J,eAAegB,cAC7BD,EAAGE,OAAO3E,KAAKiD,OAASnJ,KAAKC,MAAMS,KAAKmJ,GACxCc,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK0K,KAClDT,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK2K,KAClDV,EAAGI,W,+BAII,IAAD,OACExM,EAAYyB,KAAKC,MAAjB1B,QAEN,OADFyM,QAAQC,IAAIjL,KAAKC,MAAMS,KAAKmJ,IAEtB,yBAAK7K,UAAWT,EAAQ+K,OACpB,kBAAC,KAAD,CACApD,KAAQlG,KAAKJ,MAAMsJ,UACnB5F,MAAS,IACTiG,OAAS,IACTC,QACI,CAACC,qBAAqB,GAE1ByB,IAAO,SAACC,GAAD,OAAe,EAAKvB,eAAiBuB,U,GAlDnCpI,aAyDTG,gBA/DD,SAAA/E,GAAK,MAAK,CACvBmL,MAAM,CACJnG,QAAS,WA6DGD,CAAmByG,ICzD7B1L,GAAYC,YAAW,CAC3BoN,KAAM,CACJ7G,SAAU,KAEZ8G,OAAQ,CACNpI,QAAS,eACTuG,OAAQ,QACR8B,UAAW,cAEbrH,MAAO,CACLe,SAAU,IAEZuG,IAAK,CACHC,aAAc,IAEhBC,KAAM,CACJjC,OAAQ,qBACRpG,MAAO,SAETsI,MAAO,CACL7H,QAAS,oBACT2H,aAAc,IAEhBG,aAAc,CAEZnC,OAAQ,IACRxE,SAAU,OACVZ,UAAW,IACXN,WAAY,MACZ0H,aAAc,IACdI,eAAgB,QAElBC,UAAW,CAETzH,UAAW,MACX0H,UAAW,OACXC,WAAY,MACZC,WAAY,6CACZhH,SAAW,OACXwG,aAAc,MACdS,eAAgB,OAChB,UAAW,CAETF,WAAY,MACZG,WAAY,KAEdnI,WAAY,OACZN,YAAa,QAEf0I,aAAa,CACXzH,gBAAgB,yBAElB0H,aAAa,CACX1H,gBAAgB,yBAElB2H,YAAY,CACV3H,gBAAiB,wBAEnB4H,YAAY,CACV5H,gBAAiB,wBAEnB6H,YAAY,CACV7H,gBAAiB,0BAEnB8H,YAAY,CACV9H,gBAAiB,0BAEnB+H,YAAY,CACV/H,gBAAiB,wBAEnBgI,aAAa,CACXhI,gBAAiB,4BAEnBiI,YAAY,CACVjI,gBAAiB,4BAEnBkI,aAAa,CACXlI,gBAAiB,4BAEnBmI,aAAa,CACXnI,gBAAiB,4BAEnBoI,aAAa,CACXpI,gBAAiB,4BAEnBqI,aAAa,CACXrI,gBAAiB,8BAKN,SAASsI,GAAT,GAA0C,IAArBC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,MACxC7O,EAAUN,KACH,0BAAMe,UAAWT,EAAQgN,QAAzB,UAIb,OACE,6BACI,kBAAC8B,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAU3J,QAAS,GACzC,kBAACyJ,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAO6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACtD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQ8N,cACvB,kBAACwB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACnCiL,EAAWW,YAKtB,kBAACT,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQ+N,cACvB,kBAACuB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWY,YAKpB,kBAACV,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQgO,aACvB,kBAACsB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,UACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWa,WAKpB,kBAACX,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQiO,aACvB,kBAACqB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,UACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWc,WAKpB,kBAACZ,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQkO,aACvB,kBAACoB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,UACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWe,WAKpB,kBAACb,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQmO,aACvB,kBAACmB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,UACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWgB,WAKpB,kBAACd,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQoO,aACvB,kBAACkB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,UACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWiB,WAKpB,kBAACf,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQqO,cACvB,kBAACiB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWkB,YAKpB,kBAAChB,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQsO,aACvB,kBAACgB,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,UACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWmB,WAKpB,kBAACjB,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQuO,cACvB,kBAACe,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWoB,YAKpB,kBAAClB,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQwO,cACvB,kBAACc,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWqB,YAKpB,kBAACnB,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQyO,cACvB,kBAACa,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWsB,YAKpB,kBAACpB,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAQ6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvD,kBAACC,GAAA,EAAD,CAAM5O,UAAWT,EAAQ0O,cACvB,kBAACY,GAAA,EAAD,KACE,uBAAG7O,UAAWT,EAAQsN,aAAc3J,MAAM,UAA1C,WACA,wBAAIlD,UAAWT,EAAQwN,UAAW7J,MAAM,UACrCiL,EAAWuB,YAKpB,kBAACC,GAAD,CAAYjO,KAAM0M,IAClB,kBAACwB,GAAD,CAAYlO,KAAM0M,M,yBCzMtByB,G,YAEF,WAAY5O,GAAO,IAAD,8BACd,4CAAMA,KAFV2J,eAAiB,GAGb,EAAKhK,MAAQ,CACTsJ,UAAW,CACPC,OAAO,EAAKlJ,MAAMS,KAAKmJ,GACvBT,SAAS,CACP,CACEC,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAKoJ,KACrBC,MAAK,EACLC,YAAc,yBACdpF,gBAAkB,4BAK1BkK,WAAW,CACT3F,OAAO,EAAKlJ,MAAMS,KAAKmJ,GACrBT,SAAS,CACP,CACEC,MAAM,SACNnD,KAAK,EAAKjG,MAAMS,KAAK0K,KACrBrB,MAAK,EACLC,YAAc,yBACdpF,gBAAkB,6BAxBhB,E,kFAiCd,IAAI+F,EAAK3K,KAAK4J,eAAegB,cAC7BD,EAAGE,OAAO3E,KAAKiD,OAASnJ,KAAKC,MAAMS,KAAKmJ,GACxCc,EAAGE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAKoJ,KAClDa,EAAGI,SACH,IAAIgE,EAAM/O,KAAKgP,gBAAgBpE,cAC/BmE,EAAIlE,OAAO3E,KAAKiD,OAASnJ,KAAKC,MAAMS,KAAKmJ,GACzCkF,EAAIlE,OAAO3E,KAAKkD,SAAS,GAAGlD,KAAOlG,KAAKC,MAAMS,KAAK0K,KACnD2D,EAAIhE,W,+BAIC,IAAD,OACIxM,EAAYyB,KAAKC,MAAjB1B,QACN,OACI,6BACE,kBAAC8O,GAAA,EAAD,CAAMC,WAAS,EAAE1J,QAAS,GACtB,kBAACyJ,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAO6B,GAAI,GAAIC,GAAI,GAC7C,kBAACE,GAAA,EAAD,CAAO1L,MAAM,UACX,kBAACmL,GAAA,EAAD,CAAMC,WAAS,EAAC1J,QAAS,EAAG5E,UAAWT,EAAQoN,MAC7C,kBAAC0B,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACIuB,SAAU,GACV/P,MAAOc,KAAKC,MAAMiP,QAAQpF,KAC1BqF,YAAY,QACZC,SAAU,EACVC,cAAe,CAAC,MAAM,SAAS,QAAQ,QACvCC,UAAW,GACX/F,OAAQ,IACRjG,MAAO,OAGb,kBAAC+J,GAAA,EAAD,CAAMG,MAAI,EAAEC,GAAI,GAAIC,GAAI,GACtB,yBAAK1O,UAAWT,EAAQ+K,OACxB,kBAAC,KAAD,CACEpD,KAAQlG,KAAKJ,MAAMsJ,UACnB5F,MAAS,IACTiG,OAAS,IACTC,QACI,CAACC,qBAAqB,GAE1ByB,IAAO,SAACC,GAAD,OAAe,EAAKvB,eAAiBuB,QAKlD,kBAAC1L,EAAA,EAAD,CAAaT,UAAWT,EAAQ4F,OAAhC,YAKN,kBAACkJ,GAAA,EAAD,CAAMG,MAAI,EAACxO,UAAWT,EAAQqN,MAAO6B,GAAI,GAAIC,GAAI,GAC7C,kBAACE,GAAA,EAAD,CAAM1L,MAAM,UACZ,kBAACmL,GAAA,EAAD,CAAMC,WAAS,EAAC1J,QAAS,EAAG5E,UAAWT,EAAQoN,MAC3C,kBAAC0B,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,KAAD,CACI6B,kBAAmB,GACnBN,SAAU,GACVO,mBAAoB,CAChB,EACA,GACA,GACA,GACA,IAEJH,cAAe,CACX,YACA,SACA,OACA,aAEJnQ,MAAOc,KAAKC,MAAMiP,QAAQ9D,KAC1B7B,OAAQ,OAGd,kBAAC8D,GAAA,EAAD,CAAMG,MAAI,EAAEC,GAAI,GAAIC,GAAI,GACtB,yBAAK1O,UAAWT,EAAQ+K,OACxB,kBAAC,KAAD,CACEpD,KAAQlG,KAAKJ,MAAMkP,WACnBxL,MAAS,IACTiG,OAAS,IACTC,QACI,CAACC,qBAAqB,GAE1ByB,IAAO,SAACC,GAAD,OAAe,EAAK6D,gBAAkB7D,QAKnD,kBAAC1L,EAAA,EAAD,CAAYT,UAAWT,EAAQ4F,OAA/B,kB,GA3HJpB,aAuING,gBAvKD,SAAA/E,GAAK,MAAK,CACvBmL,MAAM,CACJhG,MAAM,IACNiG,OAAO,KAEToC,KAAK,CACHrH,UAAW,IAEbsH,MAAO,GAIPzH,MAAO,CACLe,SAAU,GACVnB,QAAS,OACTO,UAAW,GAEbmL,MAAM,CACF1L,QAAS,OACT7B,MAAO,SACPoB,MAAO,QAmJGJ,CAAmB2L,I,mOC7JnCjP,MAAQ,CACNO,QAAQ,GACRgN,WAAW,CACTW,QAAU,EACVC,QAAU,EACVC,OAAS,EACTC,OAAS,EACTC,OAAQ,EACRC,OAAS,EACTC,OAAS,EACTC,QAAU,EACVC,OAAS,EACTC,QAAU,EACVC,QAAU,EACVC,QAAU,EACVC,QAAU,GAEZgB,UAAU,CACR7F,GAAG,CAAC,EAAE,EAAE,GACRC,KAAK,GACLsB,KAAK,GACLnB,KAAK,GACLC,KAAK,GACLmB,KAAK,GACLlB,KAAK,GACLC,KAAK,GACLC,KAAK,GACLC,KAAK,GACLC,MAAM,GACNO,MAAM,GACNL,MAAM,GACNC,MAAM,IAERwE,QAAQ,CACNpF,KAAM,GAER6F,WAAW,CACT9F,GAAG,CAAC,EAAE,EAAE,GACRC,KAAK,GACLsB,KAAK,K,EA+DTwE,QAAU,WACRC,KAAMC,IAAI,iBACTC,MAAK,SAAAC,GAAG,OAAI,EAAK3P,SAAS,CAAC6O,QAAUc,EAAI9J,KAAK,QAC9C+J,OAAM,SAAAC,GAAG,OAAIlF,QAAQC,IAAIiF,MAE1B,IAAMC,EAAU,CACdtG,GAAG,GACHC,KAAK,GACLsB,KAAK,IAGPyE,KAAMC,IAAI,sBACTC,MAAK,SAAAC,GACJA,EAAI9J,KAAKjH,KAAI,SAASmR,EAAQC,GAC5BF,EAAQtG,GAAGlB,KAAKyH,EAAQvG,IACxBsG,EAAQrG,KAAKnB,KAAKyH,EAAQtG,MAC1BqG,EAAQ/E,KAAKzC,KAAKyH,EAAQhF,SAE5B,EAAK/K,SAAS,CAACsP,WAAWQ,OAE3BF,OAAM,SAAAC,GAAG,OAAIlF,QAAQC,IAAIiF,MAE1B,EAAKI,WAAa5H,WAAW,EAAKkH,QAAQW,KAAb,gBAAwB,M,6LA7ErDvQ,KAAK4P,U,mJAKLY,aAAaxQ,KAAKsQ,c,+BA4ET,IAAD,EAC+CtQ,KAAKJ,MAAnDuN,EADD,EACCA,WAAYuC,EADb,EACaA,UAAWR,EADxB,EACwBA,QAASS,EADjC,EACiCA,WAEvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACA,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,GAAD,CAAMxD,WAAYA,EAAYC,MAAOsC,OACzE,kBAAC,IAAD,CAAOgB,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,GAAD,CAASzB,QAASA,EAASxO,KAAMiP,OACtE,kBAAC,IAAD,CAAOe,KAAK,kBAAkBC,OAAQ,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOD,KAAK,gBAAgBC,OAAQ,kBAAM,kBAAC,GAAD,SAC1C,kBAAC,IAAD,CAAOD,KAAK,iBAAiBC,OAAQ,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAOD,KAAK,iBAAiBC,OAC3B,kBAAM,kBAAChC,GAAD,SAER,kBAAC,IAAD,CAAO+B,KAAO,UAAUC,OAAQ,kBAAM,kBAAC,GAAD,UAEtC,kBAAC,IAAD,CAAOA,OAAS,kBAAM,kBAAC,EAAD,e,GApJH5N,aCJvB6N,GAAcC,QACW,cAA7BC,OAAOrS,SAASsS,UAEe,UAA7BD,OAAOrS,SAASsS,UAEhBD,OAAOrS,SAASsS,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOrG,GAC9BsG,UAAUC,cACPC,SAASH,GACTnB,MAAK,SAAAuB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5R,QACfuR,UAAUC,cAAcO,YAI1B3G,QAAQC,IACN,iHAKEJ,GAAUA,EAAO+G,UACnB/G,EAAO+G,SAASN,KAMlBtG,QAAQC,IAAI,sCAGRJ,GAAUA,EAAOgH,WACnBhH,EAAOgH,UAAUP,WAO5BrB,OAAM,SAAA6B,GACL9G,QAAQ8G,MAAM,4CAA6CA,MC3FjEC,IAASpB,OACW,kBAAC,GAAD,MACJqB,SAASC,eAAe,SDejC,SAAkBpH,GACvB,GAA6C,kBAAmBsG,UAAW,CAGzE,GADkB,IAAIe,IAAIC,WAAwBrB,OAAOrS,SAAS2T,MACpDC,SAAWvB,OAAOrS,SAAS4T,OAIvC,OAGFvB,OAAOwB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMiB,WAAN,sBAEPvB,KAgEV,SAAiCM,EAAOrG,GAEtC0H,MAAMrB,GACHnB,MAAK,SAAAyC,GAEJ,IAAMC,EAAcD,EAASE,QAAQ5C,IAAI,gBAEnB,MAApB0C,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAY3J,QAAQ,cAG5CqI,UAAUC,cAAcwB,MAAM7C,MAAK,SAAAuB,GACjCA,EAAauB,aAAa9C,MAAK,WAC7Be,OAAOrS,SAASqU,eAKpB7B,GAAgBC,EAAOrG,MAG1BoF,OAAM,WACLjF,QAAQC,IACN,oEArFA8H,CAAwB7B,EAAOrG,GAI/BsG,UAAUC,cAAcwB,MAAM7C,MAAK,WACjC/E,QAAQC,IACN,iHAMJgG,GAAgBC,EAAOrG,OCrC/BuG,K","file":"static/js/main.31ded820.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default () =>\r\n<h3>Not found</h3>","import React from \"react\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Route, BrowserRouter as Router, MemoryRouter } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typo: {\r\n      color:'rgb(255,255,255)'\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SimpleBreadcrumbs() {\r\n    const classes = useStyles();\r\n    return (\r\n      <Route>\r\n        {({ location }) => {\r\n          const pathnames = location.pathname.split(\"/\").filter(x => x);\r\n          return (\r\n            <Breadcrumbs aria-label=\"Breadcrumb\" className={classes.typo}>\r\n              {pathnames.map((value, index) => {\r\n                const last = index === pathnames.length - 1;\r\n                const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\r\n  \r\n                return last ? (\r\n                  <Typography  key={to}>\r\n                    {value}\r\n                  </Typography>\r\n                ) : (\r\n                  <RouterLink className={classes.typo} to={to} key={to}>\r\n                    {value}\r\n                  </RouterLink>\r\n                );\r\n              })}\r\n            </Breadcrumbs>\r\n          );\r\n        }}\r\n      </Route>\r\n    );\r\n  }","import React,{Component , Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport  compose  from 'recompose/compose';\r\nimport { AppBar, Toolbar,IconButton,Typography,Hidden,Drawer,Divider, List,ListItem,ListItemText,Collapse} from '@material-ui/core';\r\nimport {Menu} from '@material-ui/icons';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport SimpleBreadcrumbs from './breadcrumb';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    //paddingTop: theme.spacing(4),\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    //paddingTop: theme.spacing(3),\r\n    background: 'linear-gradient(70deg, #262261 35%, #323232 90%)'\r\n    //background: 'rgb(50,50,50)'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    //backgroundImage: 'url(' + image + ')'\r\n    //background: 'rgb(147,147,147)'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(5),\r\n    paddingTop : theme.spacing(13),\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: -drawerWidth,\r\n    },\r\n   \r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  appIcon:{\r\n    color:\"rgb(255,255,255)\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  test:{\r\n    paddingTop: theme.spacing(6),\r\n  },\r\n  typo:{\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      \r\n    },\r\n    //paddingTop:15\r\n    //marginLeft: -48,\r\n  }\r\n});\r\n\r\nclass Layout extends Component{\r\n    state = {\r\n        mobileOpen:false,\r\n        listA:false,\r\n        listB:false,\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const { classes, location:{pathname},children,writers } = this.props;\r\n        const { mobileOpen}= this.state;\r\n        const { listA,listB}=this.state;\r\n        //const classes = useStyles();\r\n        //const theme = useTheme();\r\n        //const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n        const handleDrawerToggle = () => {\r\n            this.setState({mobileOpen: !this.state.mobileOpen})\r\n        };\r\n\r\n        const handleClick = () => {\r\n          this.setState({listA: !this.state.listA})\r\n        };\r\n\r\n        const handleClick2 = () => {\r\n          this.setState({listB: !this.state.listB})\r\n        };\r\n\r\n        const drawer = (\r\n            <div>\r\n              <Hidden smDown>\r\n              <div className={classes.toolbar} />\r\n              </Hidden>\r\n              <div className={classes.test} ></div>\r\n              <List\r\n                aria-labelledby=\"nested-list-subheader\"\r\n                className=\"list\"\r\n              >\r\n                <Divider/>\r\n                <ListItem button component={Link} to =\"/RTChart\" selected={'/RTChart' === pathname}>\r\n                    <ListItemText primary={<b>Chart</b>} />\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button onClick={handleClick}>\r\n                  <ListItemText primary={<b>Masters</b>} />\r\n                  {listA ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={listA} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} component={Link} to =\"/Home/MTCountry\" >\r\n                      <ListItemText primary=\"Country\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} component={Link} to =\"/Home/MTFactory\" >\r\n                      <ListItemText primary=\"Factory\" />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n                <Divider/>\r\n                <ListItem button component={Link} to =\"/Home/writers\" selected={'/Home/writers' === pathname}>\r\n                    <ListItemText primary={<b>Quality Management</b>} />\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button component={Link} to = \"/Report\">\r\n                  <ListItemText primary={<b>Report</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button >\r\n                  <ListItemText primary={<b>EHS</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button >\r\n                  <ListItemText primary={<b>Raw Materials Management</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button >\r\n                  <ListItemText primary={<b>Finished Goods</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button >\r\n                   <ListItemText primary={<b>Checkshseet</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button >\r\n                  <ListItemText primary={<b>Maintenance Management</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button >\r\n                  <ListItemText primary={<b>Set Up</b>} />                 \r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button onClick={handleClick2}>\r\n                  <ListItemText primary={<b>Reports</b>} />\r\n                  {listB? <ExpandLess /> : <ExpandMore />}                 \r\n                </ListItem>\r\n                <Collapse in={listB} timeout=\"auto\" unmountOnExit>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem button className={classes.nested} component={Link} to =\"/Report/Chart\" >\r\n                      <ListItemText primary=\"Bar Chart\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} component={Link} to =\"/Report/Chart2\">\r\n                      <ListItemText primary=\"Line Chart 1\" />\r\n                    </ListItem>\r\n                    <ListItem button className={classes.nested} component={Link} to =\"/Report/Chart3\">\r\n                      <ListItemText primary=\"Line Chart 2\" />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n                <Divider/>\r\n              </List>\r\n            </div>\r\n        );\r\n        return <Fragment>\r\n        <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar} onClick={handleDrawerToggle}>\r\n          <Toolbar>\r\n            <div className={classes.typo} align=\"left\">\r\n            <SimpleBreadcrumbs/>\r\n            </div>           \r\n            <Typography  className={classes.typo} align=\"right\" variant=\"h6\" noWrap>\r\n              Profes - Your Health, Our Oil\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true, // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          \r\n        </nav>\r\n        <main className={classes.content}>\r\n            {children}\r\n        </main>\r\n      </div>\r\n      </Fragment>\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    withStyles(styles)\r\n)(Layout)\r\n\r\n/*<MenuList>\r\n                    <MenuItem component={Link} to = \"/login\">Login</MenuItem>\r\n                    <MenuItem component={Link} to =\"/\" selected={'/' === pathname}> HOme</MenuItem>\r\n                    <MenuItem component={Link} to =\"/writers\" selected={'/writers' === pathname}> WRiter</MenuItem>\r\n                    <MenuList>\r\n                    {writers.map(({id, name}) => {\r\n                        const to= `/writers/${id}`\r\n                        return <MenuItem key={id} component ={Link} to={to} selected={to === pathname}>{name}</MenuItem>\r\n                    })}\r\n                    </MenuList>\r\n                </MenuList>\r\n              <Divider />\r\n\r\n\r\n\r\n              --------------------\r\n              <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n              align=\"left\"\r\n            >\r\n              <Menu />\r\n            </IconButton>\r\n              \r\n              \r\n              \r\n              \r\n              */","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n    hover: 'rgb(23,82,142)',\r\n  },\r\n}));\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n  \r\n}))(TableRow);\r\n\r\nfunction createData(name, remark, inactive, operator, lastmdfdate) {\r\n  return { name, remark, inactive, operator, lastmdfdate};\r\n}\r\n\r\nconst rows = [\r\n  createData('Malaysia', 'nothing', false, 'Lyon', '2019-09-11 12:00:00am'),\r\n  createData('Singapore','nothing', true, 'Lyon', '2019-09-11 12:00:00am'),\r\n  createData('India','nothing', false, 'Lyon', '2019-09-11 12:00:00am'),\r\n  createData('Thailand', 'nothing', false, 'Lyon', '2019-09-11 12:00:00am'),\r\n  createData('China','nothing', false, 'Lyon', '2019-09-11 12:00:00am'),\r\n];\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grow in={true}>\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table} size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Country Name</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Remarks</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Inactive</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Operator</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Last Modified Date</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Action</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <StyledTableRow key={row.name}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.remark}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Checkbox disabled checked={row.inactive}></Checkbox></StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.operator}</StyledTableCell>\r\n              <StyledTableCell align=\"right\">{row.lastmdfdate}</StyledTableCell>\r\n              <StyledTableCell align=\"right\"><Tooltip title=\"Edit\"><IconButton><EditIcon/></IconButton></Tooltip></StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n    </Grow>\r\n  );\r\n}","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Search from '@material-ui/icons/Search'\r\nimport ViewColumn from '@material-ui/icons/ViewColumn'\r\nimport SaveAlt from '@material-ui/icons/SaveAlt'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\nimport FirstPage from '@material-ui/icons/FirstPage'\r\nimport LastPage from '@material-ui/icons/LastPage'\r\nimport Add from '@material-ui/icons/Add'\r\nimport Check from '@material-ui/icons/Check'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport Remove from '@material-ui/icons/Remove'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\n\r\nexport default function MaterialTableDemo() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: 'Factory', field: 'Factory' },\r\n      { title: 'Detail', field: 'Detail' },\r\n      { title: 'Year', field: 'Year', type: 'numeric' },\r\n      { title: 'Remarks', field: 'Remark' },\r\n      { title: 'Operator', field: 'Operator' },\r\n      { title: 'Last Modifield Date',  field: 'lmd'},\r\n    ],\r\n    data: [\r\n      { Factory: 'F1', Detail: 'Rubber', Year: 1995, Remark: 'N/A', Operator:'Lyon',lmd:'03/10/2019 10:55:00am'},\r\n      { Factory: 'F11', Detail: 'Rubber2', Year: 2015, Remark: 'N/A', Operator:'Manu',lmd:'09/09/2017 5:50:00pm'},\r\n      { Factory: 'F13', Detail: 'Rubber3', Year: 1997, Remark: 'N/A', Operator:'Banu',lmd:'05/01/2015 7:50:00am'},\r\n      { Factory: 'F32', Detail: 'Rubber5', Year: 2005, Remark: 'N/A', Operator:'Pari',lmd:'04/03/2012 12:50:00pm'},\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <Grow in={true}>\r\n    <MaterialTable\r\n        icons={{\r\n            Edit:EditIcon,\r\n            Check: Check,\r\n            DetailPanel: ChevronRight,\r\n            Export: SaveAlt,\r\n            Filter: FilterList,\r\n            FirstPage: FirstPage,\r\n            LastPage: LastPage,\r\n            NextPage: ChevronRight,\r\n            PreviousPage: ChevronLeft,\r\n            Search: Search,\r\n            ViewColumn:ViewColumn,\r\n            Delete:DeleteIcon,\r\n            Clear : ClearIcon,\r\n            Add: Add,\r\n            SortArrow:ArrowUpward,\r\n            ResetSearch:ClearIcon,\r\n            ThirdStateCheck:Remove\r\n        }}\r\n      title=\"Factory\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.push(newData);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data[data.indexOf(oldData)] = newData;\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.splice(data.indexOf(oldData), 1);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n      }\r\n    \r\n    }\r\n    />\r\n    </Grow>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  Chart:{\r\n    display: 'flex',\r\n    margin:-50,\r\n  }\r\n})\r\nclass Contamination extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData:{\r\n                labels: ['Jan 2019', 'Feb 2019', 'Mar 2019', 'Apr 2019', 'May 2019', 'Jun 2019', 'Jul 2019', 'Aug 2019', 'Sep 2019', 'Oct 2019','Nov 2019', 'Dec 2019'],\r\n                datasets:[\r\n                  {\r\n                    label:'Monthly Target',\r\n                    data:[\r\n                      700,\r\n                      800,\r\n                      300,\r\n                      650,\r\n                      888,\r\n                      200,\r\n                      400,\r\n                      350,\r\n                      900,\r\n                      1000                      \r\n                    ],\r\n                    backgroundColor:[\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)'\r\n                    ]\r\n                  },\r\n                  {\r\n                    label:'Monthly Production',\r\n                    data:[\r\n                      100,\r\n                      850,\r\n                      0,\r\n                      500,\r\n                      880,\r\n                      250,\r\n                      600,\r\n                      800,\r\n                      600,\r\n                      500                      \r\n                    ],\r\n                    backgroundColor:[\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)',\r\n                        'rgba(100, 99, 5, 0.6)'\r\n                    ]\r\n                  }\r\n\r\n\r\n\r\n                  \r\n                ]\r\n              }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return(\r\n            <div className = {classes.Chart} >\r\n                <Bar\r\n                data = {this.state.chartData}\r\n                width = {100}\r\n                height= {50}\r\n                options = {{maintainAspectRatio: true\r\n                }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withStyles(styles)(Contamination);\r\n","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2'\r\nimport {  withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  Chart:{\r\n    display: 'flex',\r\n    margin:-50,\r\n  }\r\n})\r\nclass Chart extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData:{\r\n                labels: ['00:00', '00:01', '00:02', '00:03', '00:04', '00:05', '00:06', '00:07', '00:08', '00:09','00:10', '00:11','00:12','00:13','00:14','00:15','00:16','00:17','00:18','00:19','00:20','00:21','00:22','00:23'],\r\n                datasets:[\r\n                  {\r\n                    label:'Percentage of KG Contamination/Ton Product',\r\n                    data:[\r\n                      700,\r\n                      800,\r\n                      300,\r\n                      650,\r\n                      888,\r\n                      200,\r\n                      400,\r\n                      350,\r\n                      900,\r\n                      1000,\r\n                      700,\r\n                      800,\r\n                      300,\r\n                      650,\r\n                      888,\r\n                      200,\r\n                      400,\r\n                      350,\r\n                      900,\r\n                      1000                      \r\n                    ],\r\n                    backgroundColor:[\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)',\r\n                      'rgba(100, 99, 200, 0.6)'\r\n                    ]\r\n                }\r\n                //   ,\r\n                //   {\r\n                //     label:'Monthly Production',\r\n                //     data:[\r\n                //       100,\r\n                //       850,\r\n                //       0,\r\n                //       500,\r\n                //       880,\r\n                //       250,\r\n                //       600,\r\n                //       800,\r\n                //       600,\r\n                //       500,\r\n                //       100,\r\n                //       850,\r\n                //       0,\r\n                //       500,\r\n                //       880,\r\n                //       250,\r\n                //       600,\r\n                //       800,\r\n                //       600,\r\n                //       500                      \r\n                //     ],\r\n                //     backgroundColor:[\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)',\r\n                //         'rgba(100, 99, 5, 0.6)'\r\n                //     ]\r\n                //   }\r\n\r\n\r\n\r\n                  \r\n                ]\r\n              }\r\n        }\r\n    }\r\n\r\n    render(){\r\n      const { classes } = this.props;\r\n        return(\r\n            <div className = {classes.Chart}>\r\n                <Line\r\n                data = {this.state.chartData}\r\n                width = {100}\r\n                height= {50}\r\n                options = {{maintainAspectRatio: true\r\n                }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withStyles(styles)(Chart);\r\n","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  Chart:{\r\n    display: 'flex',\r\n  }\r\n})\r\n\r\nclass LineChart1 extends Component {\r\n  chartReference = {};\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData: {\r\n              labels:this.props.test.dt,\r\n              datasets:[\r\n                {\r\n                  label:\"PT3703A\",\r\n                  data:this.props.test.val1,\r\n                  fill:false,\r\n                  borderColor : 'rgba(148, 0, 211, 0.6)',\r\n                  backgroundColor : 'rgba(148, 0, 211, 0.6)'\r\n                },\r\n                {\r\n                  label:\"PT3801\",\r\n                  data:this.props.test.val3,\r\n                  fill:false,\r\n                  borderColor : 'rgba(0, 0, 255, 0.6)',\r\n                  backgroundColor : 'rgba(0, 0, 255, 0.6)'\r\n                },\r\n                {\r\n                  label:\"PT3802\",\r\n                  data:this.props.test.val4,\r\n                  fill:false,\r\n                  borderColor : 'rgba(0, 255, 0, 0.6)',\r\n                  backgroundColor : 'rgba(0, 255, 0, 0.6)'\r\n                },\r\n                {\r\n                  label:\"TE2601\",\r\n                  data:this.props.test.val6,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 127, 0, 0.6)',\r\n                  backgroundColor : 'rgba(255, 127, 0, 0.6)'\r\n                },\r\n                {\r\n                  label:\"TE4702\",\r\n                  data:this.props.test.val7,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 0, 0, 0.6)',\r\n                  backgroundColor : 'rgba(255, 0, 0, 0.6)'\r\n                },\r\n                {\r\n                  label:\"TE4706B\",\r\n                  data:this.props.test.val8,\r\n                  fill:false,\r\n                  borderColor : 'rgba(0, 0, 0, 0.6)',\r\n                  backgroundColor : 'rgba(255, 255, 255, 0.6)'\r\n                },\r\n                {\r\n                  label:\"TE7120\",\r\n                  data:this.props.test.val9,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 255, 100, 0.6)',\r\n                  backgroundColor : 'rgba(255, 255, 100, 0.6)'\r\n                },\r\n                {\r\n                  label:\"TE8901A\",\r\n                  data:this.props.test.val10,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 100, 255, 0.6)',\r\n                  backgroundColor : 'rgba(255, 100, 255, 0.6)'\r\n                },\r\n                {\r\n                  label:\"TCV8902\",\r\n                  data:this.props.test.va11,\r\n                  fill:false,\r\n                  borderColor : 'rgba(100, 255, 255, 0.6)',\r\n                  backgroundColor : 'rgba(100, 255, 255, 0.6)'\r\n                },\r\n                {\r\n                  label:\"PCV9601\",\r\n                  data:this.props.test.val12,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 200, 255, 0.6)',\r\n                  backgroundColor : 'rgba(255, 200, 255, 0.6)'\r\n                },\r\n                {\r\n                  label:\"LCV9901\",\r\n                  data:this.props.test.val13,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 255, 200, 0.6)',\r\n                  backgroundColor : 'rgba(255, 255, 200, 0.6)'\r\n                },\r\n              ]\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n      let lc = this.chartReference.chartInstance;\r\n      lc.config.data.labels = this.props.test.dt;\r\n      lc.config.data.datasets[0].data = this.props.test.val1;\r\n      lc.config.data.datasets[1].data = this.props.test.val3;\r\n      lc.config.data.datasets[2].data = this.props.test.val4;\r\n      lc.config.data.datasets[3].data = this.props.test.val6;\r\n      lc.config.data.datasets[4].data = this.props.test.val7;\r\n      lc.config.data.datasets[5].data = this.props.test.val8;\r\n      lc.config.data.datasets[6].data = this.props.test.val9;\r\n      lc.config.data.datasets[7].data = this.props.test.val10;\r\n      lc.config.data.datasets[8].data = this.props.test.val11;\r\n      lc.config.data.datasets[9].data = this.props.test.val12;\r\n      lc.config.data.datasets[10].data = this.props.test.val13;\r\n      lc.update();\r\n    }\r\n\r\n\r\n    render(){\r\n      const { classes } = this.props;\r\n      console.log(this.props.test.dt);\r\n        return(\r\n            <div className={classes.Chart}>\r\n                <Line \r\n                data = {this.state.chartData}\r\n                width = {1000}\r\n                height= {400}\r\n                options = {\r\n                    {maintainAspectRatio: true}           \r\n                }\r\n                ref = {(reference) => this.chartReference = reference}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withStyles(styles)(LineChart1);\r\n/*export default  class LineChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.chartRef = React.createRef();\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      this.myChart.data.labels = this.props.data.map(d => d.time);\r\n      this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n      this.myChart.update();\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.chartRef.current, {\r\n        type: 'line',\r\n        options: {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: 'time',\r\n                time: {\r\n                  unit: 'week'\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  min: 0\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        data: {\r\n          labels: this.props.data.map(d => d.time),\r\n          datasets: [{\r\n            label: this.props.title,\r\n            data: this.props.data.map(d => d.value),\r\n            fill: 'none',\r\n            backgroundColor: this.props.color,\r\n            pointRadius: 2,\r\n            borderColor: this.props.color,\r\n            borderWidth: 1,\r\n            lineTension: 0\r\n          }]\r\n        }\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.chartRef} />;\r\n    }\r\n  }\r\n  chartData:{\r\n                labels: ['Jan 2019', 'Feb 2019', 'Mar 2019', 'Apr 2019', 'May 2019', 'Jun 2019', 'Jul 2019', 'Aug 2019', 'Sep 2019', 'Oct 2019','Nov 2019', 'Dec 2019'],\r\n                datasets:[\r\n                  {\r\n                    label:'Monthly Target',\r\n                    data:[ \r\n                      700,\r\n                      800,\r\n                      300,\r\n                      650,\r\n                      888,\r\n                      200,\r\n                      400,\r\n                      350,\r\n                      900,\r\n                      1000                      \r\n                    ],\r\n                    backgroundColor:'rgba(100, 99, 200, 1)',\r\n                    borderColor:'rgba(100, 99, 200, 1)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'Monthly Production',\r\n                    data:[\r\n                      100,\r\n                      850,\r\n                      0,\r\n                      500,\r\n                      880,\r\n                      250,\r\n                      600,\r\n                      800,\r\n                      600,\r\n                      500                      \r\n                    ],\r\n                    backgroundColor:'rgba(100, 99, 5, 1)',\r\n                    borderColor:'rgba(100, 99, 5, 1)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'LL',\r\n                    data:[\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                    borderColor:'rgba(255, 0, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'L',\r\n                    data:[\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 255, 0, 0.5)',\r\n                    borderColor:'rgba(255, 255, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },{\r\n                    label:'HH',\r\n                    data:[\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                    borderColor:'rgba(255, 0, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'H',\r\n                    data:[\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 255, 0, 0.5)',\r\n                    borderColor:'rgba(255, 255, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  }  \r\n                ]\r\n              }\r\n  \r\n  \r\n  */\r\n","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  Chart:{\r\n    display: 'flex',\r\n  }\r\n})\r\n\r\nclass LineChart1 extends Component {\r\n  chartReference = {};\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData: {\r\n              labels:this.props.test.dt,\r\n              datasets:[\r\n                {\r\n                  label:\"PT3703B\",\r\n                  data:this.props.test.val2,\r\n                  fill:false,\r\n                  borderColor : 'rgba(75, 0, 130, 0.6)',\r\n                  backgroundColor :  'rgba(75, 0, 130, 0.6)'\r\n                },\r\n                {\r\n                  label:\"PT4706\",\r\n                  data:this.props.test.val5,\r\n                  fill:false,\r\n                  borderColor : 'rgba(255, 255, 0, 0.6)',\r\n                  backgroundColor : 'rgba(255, 255, 0, 0.6)'\r\n                }\r\n              ]\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n      let lc = this.chartReference.chartInstance;\r\n      lc.config.data.labels = this.props.test.dt;\r\n      lc.config.data.datasets[0].data = this.props.test.val2;\r\n      lc.config.data.datasets[1].data = this.props.test.val5;\r\n      lc.update();\r\n    }\r\n\r\n\r\n    render(){\r\n      const { classes } = this.props;\r\n      console.log(this.props.test.dt);\r\n        return(\r\n            <div className={classes.Chart}>\r\n                <Line \r\n                data = {this.state.chartData}\r\n                width = {1000}\r\n                height= {400}\r\n                options = {\r\n                    {maintainAspectRatio: true}           \r\n                }\r\n                ref = {(reference) => this.chartReference = reference}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  withStyles(styles)(LineChart1);\r\n/*export default  class LineChart extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.chartRef = React.createRef();\r\n    }\r\n  \r\n    componentDidUpdate() {\r\n      this.myChart.data.labels = this.props.data.map(d => d.time);\r\n      this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n      this.myChart.update();\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.myChart = new Chart(this.chartRef.current, {\r\n        type: 'line',\r\n        options: {\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                type: 'time',\r\n                time: {\r\n                  unit: 'week'\r\n                }\r\n              }\r\n            ],\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  min: 0\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        data: {\r\n          labels: this.props.data.map(d => d.time),\r\n          datasets: [{\r\n            label: this.props.title,\r\n            data: this.props.data.map(d => d.value),\r\n            fill: 'none',\r\n            backgroundColor: this.props.color,\r\n            pointRadius: 2,\r\n            borderColor: this.props.color,\r\n            borderWidth: 1,\r\n            lineTension: 0\r\n          }]\r\n        }\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return <canvas ref={this.chartRef} />;\r\n    }\r\n  }\r\n  chartData:{\r\n                labels: ['Jan 2019', 'Feb 2019', 'Mar 2019', 'Apr 2019', 'May 2019', 'Jun 2019', 'Jul 2019', 'Aug 2019', 'Sep 2019', 'Oct 2019','Nov 2019', 'Dec 2019'],\r\n                datasets:[\r\n                  {\r\n                    label:'Monthly Target',\r\n                    data:[ \r\n                      700,\r\n                      800,\r\n                      300,\r\n                      650,\r\n                      888,\r\n                      200,\r\n                      400,\r\n                      350,\r\n                      900,\r\n                      1000                      \r\n                    ],\r\n                    backgroundColor:'rgba(100, 99, 200, 1)',\r\n                    borderColor:'rgba(100, 99, 200, 1)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'Monthly Production',\r\n                    data:[\r\n                      100,\r\n                      850,\r\n                      0,\r\n                      500,\r\n                      880,\r\n                      250,\r\n                      600,\r\n                      800,\r\n                      600,\r\n                      500                      \r\n                    ],\r\n                    backgroundColor:'rgba(100, 99, 5, 1)',\r\n                    borderColor:'rgba(100, 99, 5, 1)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'LL',\r\n                    data:[\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,\r\n                      300,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                    borderColor:'rgba(255, 0, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'L',\r\n                    data:[\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,\r\n                      350,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 255, 0, 0.5)',\r\n                    borderColor:'rgba(255, 255, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },{\r\n                    label:'HH',\r\n                    data:[\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,\r\n                      900,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                    borderColor:'rgba(255, 0, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  },\r\n                  {\r\n                    label:'H',\r\n                    data:[\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,\r\n                      850,                    \r\n                    ],\r\n                    backgroundColor:'rgba(255, 255, 0, 0.5)',\r\n                    borderColor:'rgba(255, 255, 0, 0.5)',\r\n                    fill:false,\r\n                    lineTension:0\r\n                  }  \r\n                ]\r\n              }\r\n  \r\n  \r\n  */\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LineChart1 from \"../Layout/Report/LineChart\";\r\nimport LineChart2 from \"../Layout/Report/LineChart2\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  grid: {\r\n    margin: \"0 -15px !important\",\r\n    width: \"unset\"\r\n  },\r\n  grid2: {\r\n    padding: \"0 15px !important\",\r\n    marginBottom: 15\r\n  },\r\n  cardCategory: {\r\n    //color: grayColor[0],\r\n    margin: \"0\",\r\n    fontSize: \"16px\",\r\n    marginTop: \"0\",\r\n    paddingTop: \"5px\",\r\n    marginBottom: \"0\",\r\n    justifyContent: \"auto\"\r\n  },\r\n  cardTitle: {\r\n    //color: grayColor[2],\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    fontSize : \"20px\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      //color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    },\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  Card_PT3703A:{\r\n    backgroundColor:\"rgba(148, 0, 211,0.6)\"\r\n  },\r\n  Card_PT3703B:{\r\n    backgroundColor:\"rgba(75, 0, 130, 0.6)\"\r\n  },\r\n  Card_PT3801:{\r\n    backgroundColor: \"rgba(0, 0, 255, 0.6)\"\r\n  },\r\n  Card_PT3802:{\r\n    backgroundColor: \"rgba(0, 255, 0, 0.6)\"\r\n  },\r\n  Card_PT4706:{\r\n    backgroundColor: \"rgba(255, 255, 0, 0.6)\"\r\n  },\r\n  Card_TE2601:{ \r\n    backgroundColor: \"rgba(255, 127, 0, 0.6)\"\r\n  },\r\n  Card_TE4702:{\r\n    backgroundColor: \"rgba(255, 0, 0, 0.6)\"\r\n  },\r\n  Card_TE4706b:{\r\n    backgroundColor: \"rgba(255, 255, 255, 0.6)\"\r\n  },\r\n  Card_TE7120:{\r\n    backgroundColor: \"rgba(255, 255, 100, 0.6)\"\r\n  },\r\n  Card_TE8901A:{\r\n    backgroundColor: \"rgba(255, 100, 255, 0.6)\"\r\n  },\r\n  Card_TCV8902:{\r\n    backgroundColor: \"rgba(100, 255, 255, 0.6)\"\r\n  },\r\n  Card_PCV9601:{\r\n    backgroundColor: \"rgba(255, 200, 255, 0.6)\"\r\n  },\r\n  Card_LCV9901:{\r\n    backgroundColor: \"rgba(255, 255, 200, 0.6)\"\r\n  }\r\n});\r\n\r\n\r\nexport default function SimpleCard({reportdata, test1}) {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Grid container justify=\"center\"  spacing={5}>\r\n          <Grid item className={classes.grid2} xs={12} sm={6} md={2}>\r\n            <Card className={classes.Card_PT3703A}>\r\n              <CardContent >\r\n                <p className={classes.cardCategory} align=\"center\">PT3703a</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                    {reportdata.pt3703a}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={2}>\r\n            <Card className={classes.Card_PT3703B}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">PT3703b</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.pt3703b}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={2}>\r\n            <Card className={classes.Card_PT3801}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">PT3801</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.pt3801}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={2}>\r\n            <Card className={classes.Card_PT3802}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">PT3802</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.pt3802}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={2}>\r\n            <Card className={classes.Card_PT4706}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">PT4706</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.pt4706}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={2}>\r\n            <Card className={classes.Card_TE2601}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">TE2601</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.te2601}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_TE4702}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">TE4702</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.te4702}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_TE4706b}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">TE4706b</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.te4706b}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_TE7120}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">TE7120</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.te7120}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_TE8901A}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">TE8901A</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.te8901a}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_TCV8902}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">TCV8902</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.tcv8902}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_PCV9601}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">PCV9601</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.pcv9601}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item className={classes.grid2}  xs={12} sm={6} md={3}>\r\n            <Card className={classes.Card_LCV9901}>\r\n              <CardContent>\r\n                <p className={classes.cardCategory} align=\"center\">LCV9901</p>\r\n                <h3 className={classes.cardTitle} align=\"center\">\r\n                  {reportdata.lcv9901}\r\n                </h3>\r\n                </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <LineChart1 test={test1}/>\r\n          <LineChart2 test={test1}/>\r\n        </Grid>\r\n        \r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\nimport {Line} from 'react-chartjs-2';\r\nimport Chart from 'chart.js';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  Chart:{\r\n    width:500,\r\n    height:200,\r\n  },\r\n  grid:{\r\n    marginTop: 15\r\n  },\r\n  grid2: {\r\n    //padding: \"0 15px !important\",\r\n    //marginBottom: 15,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    padding: \"10px\",\r\n    marginTop: 2,\r\n  },\r\n  space:{\r\n      padding: \"10px\",\r\n      align: \"Center\",\r\n      width: 350\r\n  }\r\n})\r\n\r\n/*                  {\r\n                    label:\"TE3801\",\r\n                    data:this.props.test.val1,\r\n                    fill:false,\r\n                    borderColor : 'rgba(0, 0, 255, 0.6)',\r\n                    backgroundColor : 'rgba(0, 0, 255, 0.6)'\r\n                  }*/\r\n                 \r\nclass RTChart extends Component{\r\n    chartReference = {};\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData: {\r\n                labels:this.props.test.dt,\r\n                datasets:[\r\n                  {\r\n                    label:\"PT3801\",\r\n                    data:this.props.test.val1,\r\n                    fill:false,\r\n                    borderColor : 'rgba(148, 0, 211, 0.6)',\r\n                    backgroundColor : 'rgba(148, 0, 211, 0.6)'\r\n                  },\r\n\r\n                ]\r\n            },\r\n            chartData2:{\r\n              labels:this.props.test.dt,\r\n                datasets:[\r\n                  {\r\n                    label:\"TE3801\",\r\n                    data:this.props.test.val2,\r\n                    fill:false,\r\n                    borderColor : 'rgba(148, 0, 211, 0.6)',\r\n                    backgroundColor : 'rgba(148, 0, 211, 0.6)'\r\n                  },\r\n\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        let lc = this.chartReference.chartInstance;\r\n        lc.config.data.labels = this.props.test.dt;\r\n        lc.config.data.datasets[0].data = this.props.test.val1;\r\n        lc.update();\r\n        let lc2 = this.chartReference2.chartInstance;\r\n        lc2.config.data.labels = this.props.test.dt;\r\n        lc2.config.data.datasets[0].data = this.props.test.val2;\r\n        lc2.update();\r\n    }\r\n\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n          return(\r\n              <div>\r\n                <Grid container  spacing={3}>\r\n                    <Grid item className={classes.grid2} xs={12} sm={6} >\r\n                        <Card  align=\"center\">\r\n                          <Grid container spacing={0} className={classes.grid}>\r\n                            <Grid item xs={12} sm={5}>\r\n                              <ReactSpeedometer\r\n                                  maxValue={20}\r\n                                  value={this.props.Onedata.val1}\r\n                                  needleColor=\"black\"\r\n                                  segments={4}\r\n                                  segmentColors={['red','yellow','green','blue']}\r\n                                  ringWidth={40}\r\n                                  height={200}\r\n                                  width={300}\r\n                                  />\r\n                            </Grid>\r\n                            <Grid item  xs={12} sm={7}>  \r\n                              <div className={classes.Chart}>\r\n                              <Line \r\n                                data = {this.state.chartData}\r\n                                width = {500}\r\n                                height= {250}\r\n                                options = {\r\n                                    {maintainAspectRatio: false}           \r\n                                }\r\n                                ref = {(reference) => this.chartReference = reference}\r\n                                />\r\n                                </div>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Typography  className={classes.title}>\r\n                            PT3801\r\n                          </Typography>  \r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item className={classes.grid2} xs={12} sm={6} >\r\n                        <Card align=\"center\">\r\n                        <Grid container spacing={0} className={classes.grid}>\r\n                            <Grid item xs={12} sm={5}>\r\n                              <ReactSpeedometer\r\n                                  needleHeightRatio={0.7}\r\n                                  maxValue={50}\r\n                                  customSegmentStops={[\r\n                                      0,\r\n                                      20,\r\n                                      30,\r\n                                      40,\r\n                                      50\r\n                                  ]}\r\n                                  segmentColors={[\r\n                                      'firebrick',\r\n                                      'tomato',\r\n                                      'gold',\r\n                                      'limegreen'\r\n                                  ]}\r\n                                  value={this.props.Onedata.val2}\r\n                                  height={200}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item  xs={12} sm={7}>  \r\n                              <div className={classes.Chart}>\r\n                              <Line \r\n                                data = {this.state.chartData2}\r\n                                width = {500}\r\n                                height= {250}\r\n                                options = {\r\n                                    {maintainAspectRatio: false}           \r\n                                }\r\n                                ref = {(reference) => this.chartReference2 = reference}\r\n                                />\r\n                                </div>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Typography className={classes.title}>\r\n                              TE3801\r\n                          </Typography>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n          )\r\n      }\r\n     \r\n}\r\n\r\nexport default  withStyles(styles)(RTChart);","import React ,{Component, Fragment} from 'react';\nimport {BrowserRouter,Link,Route, Switch} from 'react-router-dom';\nimport Writers from './writers';\nimport Layout from './Layout';\nimport {NotFound} from './Errors';\nimport BasicMUI from './Layout/Master/basicMaterialUI';\nimport MTCountry from './Layout/Master/MaterialTable';\nimport MTFactory from './Layout/Master/MaterialTableFactory';\nimport Contamination from './Layout/Report/Chart';\nimport Chart from './Layout/Report/ContaminationGraph';\nimport LineChart1 from './Layout/Report/LineChart';\nimport Home from'./Layout/home';\nimport RTChart from './Layout/Chart/RTchart';\nimport axios from 'axios';\n\n\nexport default class extends Component{\nintervalID;\n\nstate = {\n  writers:[],\n  reportdata:{\n    pt3703a : 0,\n    pt3703b : 0,\n    pt3801 : 0,\n    pt3802 : 0,\n    pt4706: 0,\n    te2601 : 0,\n    te4702 : 0,\n    te4706b : 0,\n    te7120 : 0,\n    te8901a : 0,\n    tcv8902 : 0,\n    pcv9601 : 0,\n    lcv9901 : 0\n  },\n  chartdata:{\n    dt:[1,2,3],\n    val1:[],\n    val2:[],\n    val3:[],\n    val4:[],\n    val5:[],\n    val6:[],\n    val7:[],\n    val8:[],\n    val9:[],\n    val10:[],\n    val11:[],\n    val12:[],\n    val13:[]\n  },\n  Onedata:{\n    val1: 0\n  },\n  chartdata2:{\n    dt:[1,2,3],\n    val1:[],\n    val2:[]\n  }\n}\n\n\nasync componentDidMount(){\n /* const writers = await(await fetch('http://localhost:3004/writers?_embed=texts')).json()\n  this.setState({writers})*/\n  this.getData();\n  //console.log(test);\n}\n\ncomponentWillUnmount(){\n  clearTimeout(this.intervalID)\n}\n//Old Data\n/*getData = () => {\n  fetch('http://desktop-4lumjjg:3000/viewone')\n  .then(response => response.json())\n  .then(data => {\n    const test = data[5];\n    //const result = data.filter(data => data)\n    this.setState({ reportdata : test });\n    const myArray = {\n      dt:[],\n      val1:[],\n      val2:[],\n      val3:[],\n      val4:[],\n      val5:[],\n      val6:[],\n      val7:[],\n      val8:[],\n      val9:[],\n      val10:[],\n      val11:[],\n      val12:[],\n      val13:[]\n    };\n\n    data.map(function(cdata,i){\n      myArray.dt.push(cdata.dt);\n      myArray.val1.push(cdata.pt3703a);\n      myArray.val2.push(cdata.pt3703b);\n      myArray.val3.push(cdata.pt3801);\n      myArray.val4.push(cdata.pt3802);\n      myArray.val5.push(cdata.pt4706);\n      myArray.val6.push(cdata.te2601);\n      myArray.val7.push(cdata.te4702);\n      myArray.val8.push(cdata.te4706b);\n      myArray.val9.push(cdata.te7120);\n      myArray.val10.push(cdata.te8901a);\n      myArray.val11.push(cdata.tcv8902);\n      myArray.val12.push(cdata.pcv9601);\n      myArray.val13.push(cdata.lcv9901);\n    })\n\n    this.setState({ chartdata : myArray});\n    // call getData() again in 5 seconds\n    this.intervalID = setTimeout(this.getData.bind(this), 10000);\n  });         \n}*/\n\ngetData = () => {\n  axios.get('/api/tabletwo')\n  .then(res => this.setState({Onedata : res.data[0]}))\n  .catch(err => console.log(err))\n\n  const myArray = {\n    dt:[],\n    val1:[],\n    val2:[]\n  };\n\n  axios.get('/api/tabletwochart')\n  .then(res => {\n    res.data.map(function(resdata,i){\n      myArray.dt.push(resdata.dt);\n      myArray.val1.push(resdata.val1);\n      myArray.val2.push(resdata.val2);\n    })\n    this.setState({chartdata2:myArray});\n  })\n  .catch(err => console.log(err))\n\n  this.intervalID = setTimeout(this.getData.bind(this),10000);\n}\n\n\n  render(){\n    const {reportdata, chartdata, Onedata, chartdata2} = this.state;\n\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Layout>\n          <Route exact path=\"/\" render={() => <Home reportdata={reportdata} test1={chartdata}/>}></Route>\n          <Route path=\"/RTChart\" render={() => <RTChart Onedata={Onedata} test={chartdata2}/>}></Route>\n          <Route path=\"/Home/MTFactory\" render={() => <MTFactory/>}></Route>\n          <Route path=\"/Report/Chart\" render={() => <Contamination/>}/>\n          <Route path=\"/Report/Chart2\" render={() => <Chart/>}/>\n          <Route path=\"/Report/Chart3\" render={\n            () => <LineChart1\n            />}/>\n          <Route path = \"/Report\" render={() => <RTChart></RTChart>}/>\n          </Layout>\n          <Route render ={() => <NotFound/>}/>\n        </Switch>\n      </BrowserRouter>         \n    );\n  }\n}\n\n/*          \nwriters={writers} this is located beside layout\n\n<Route path=\"/Home/writers\" render={\n            props => <Writers {...props} writers={writers} ></Writers>}\n            ></Route>\n                              data={reportdata.datasets[0].data}\n                  title={reportdata.datasets[0].label}\n                  color={reportdata.datasets[0].Color}\n            \n            \n            */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n                    <App />,\n                document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}